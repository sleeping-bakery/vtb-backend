/*
 * Система рассмотрения заявок на экспресс-гарантии, полученных от партнеров банка
 *
 * Функционал выдачи экспресс гарантий позволяет реализовать след. сервисы:  - Создание клиентом заявки в личном кабинете на выдачу экспресс-гарантии - Отображение информации о закупке по минимальному набору введенных атрибутов - Загрузка и прикрепление документов к заявке - Формирование заявления на выдачу экспресс-гарантии для подписания клиентом - Подписание клиентом заявления с использованием УНЭП - Отображение в Интернет банке статусов заявки - Получение и передача заявок от партнеров - Создание сотрудником банка заявки на гарантию - Формирование проекта решения по заявке на гарантию
 *
 * The version of the OpenAPI document: 1.4.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace Multibanking.GuaranteeClient.Model
{
    /// <summary>
    ///     Доп. информация о ФЛ
    /// </summary>
    [DataContract(Name = "PersonAttributes")]
    public class PersonAttributes : IEquatable<PersonAttributes>, IValidatableObject
    {
        /// <summary>
        ///     Гражданство (значение из двух букв по справочнику ISO)
        /// </summary>
        /// <value>Гражданство (значение из двух букв по справочнику ISO)</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum CitizenshipEnum
        {
            /// <summary>
            ///     Enum AF for value: AF
            /// </summary>
            [EnumMember(Value = "AF")] AF = 1,

            /// <summary>
            ///     Enum AL for value: AL
            /// </summary>
            [EnumMember(Value = "AL")] AL = 2,

            /// <summary>
            ///     Enum AQ for value: AQ
            /// </summary>
            [EnumMember(Value = "AQ")] AQ = 3,

            /// <summary>
            ///     Enum DZ for value: DZ
            /// </summary>
            [EnumMember(Value = "DZ")] DZ = 4,

            /// <summary>
            ///     Enum AS for value: AS
            /// </summary>
            [EnumMember(Value = "AS")] AS = 5,

            /// <summary>
            ///     Enum AD for value: AD
            /// </summary>
            [EnumMember(Value = "AD")] AD = 6,

            /// <summary>
            ///     Enum AO for value: AO
            /// </summary>
            [EnumMember(Value = "AO")] AO = 7,

            /// <summary>
            ///     Enum AG for value: AG
            /// </summary>
            [EnumMember(Value = "AG")] AG = 8,

            /// <summary>
            ///     Enum AZ for value: AZ
            /// </summary>
            [EnumMember(Value = "AZ")] AZ = 9,

            /// <summary>
            ///     Enum AR for value: AR
            /// </summary>
            [EnumMember(Value = "AR")] AR = 10,

            /// <summary>
            ///     Enum AU for value: AU
            /// </summary>
            [EnumMember(Value = "AU")] AU = 11,

            /// <summary>
            ///     Enum AT for value: AT
            /// </summary>
            [EnumMember(Value = "AT")] AT = 12,

            /// <summary>
            ///     Enum AB for value: AB
            /// </summary>
            [EnumMember(Value = "AB")] AB = 13,

            /// <summary>
            ///     Enum BS for value: BS
            /// </summary>
            [EnumMember(Value = "BS")] BS = 14,

            /// <summary>
            ///     Enum BH for value: BH
            /// </summary>
            [EnumMember(Value = "BH")] BH = 15,

            /// <summary>
            ///     Enum BD for value: BD
            /// </summary>
            [EnumMember(Value = "BD")] BD = 16,

            /// <summary>
            ///     Enum AM for value: AM
            /// </summary>
            [EnumMember(Value = "AM")] AM = 17,

            /// <summary>
            ///     Enum BB for value: BB
            /// </summary>
            [EnumMember(Value = "BB")] BB = 18,

            /// <summary>
            ///     Enum BE for value: BE
            /// </summary>
            [EnumMember(Value = "BE")] BE = 19,

            /// <summary>
            ///     Enum BM for value: BM
            /// </summary>
            [EnumMember(Value = "BM")] BM = 20,

            /// <summary>
            ///     Enum BT for value: BT
            /// </summary>
            [EnumMember(Value = "BT")] BT = 21,

            /// <summary>
            ///     Enum BO for value: BO
            /// </summary>
            [EnumMember(Value = "BO")] BO = 22,

            /// <summary>
            ///     Enum BA for value: BA
            /// </summary>
            [EnumMember(Value = "BA")] BA = 23,

            /// <summary>
            ///     Enum BW for value: BW
            /// </summary>
            [EnumMember(Value = "BW")] BW = 24,

            /// <summary>
            ///     Enum BV for value: BV
            /// </summary>
            [EnumMember(Value = "BV")] BV = 25,

            /// <summary>
            ///     Enum BR for value: BR
            /// </summary>
            [EnumMember(Value = "BR")] BR = 26,

            /// <summary>
            ///     Enum BZ for value: BZ
            /// </summary>
            [EnumMember(Value = "BZ")] BZ = 27,

            /// <summary>
            ///     Enum IO for value: IO
            /// </summary>
            [EnumMember(Value = "IO")] IO = 28,

            /// <summary>
            ///     Enum SB for value: SB
            /// </summary>
            [EnumMember(Value = "SB")] SB = 29,

            /// <summary>
            ///     Enum VG for value: VG
            /// </summary>
            [EnumMember(Value = "VG")] VG = 30,

            /// <summary>
            ///     Enum BN for value: BN
            /// </summary>
            [EnumMember(Value = "BN")] BN = 31,

            /// <summary>
            ///     Enum BG for value: BG
            /// </summary>
            [EnumMember(Value = "BG")] BG = 32,

            /// <summary>
            ///     Enum MM for value: MM
            /// </summary>
            [EnumMember(Value = "MM")] MM = 33,

            /// <summary>
            ///     Enum BI for value: BI
            /// </summary>
            [EnumMember(Value = "BI")] BI = 34,

            /// <summary>
            ///     Enum BY for value: BY
            /// </summary>
            [EnumMember(Value = "BY")] BY = 35,

            /// <summary>
            ///     Enum KH for value: KH
            /// </summary>
            [EnumMember(Value = "KH")] KH = 36,

            /// <summary>
            ///     Enum CM for value: CM
            /// </summary>
            [EnumMember(Value = "CM")] CM = 37,

            /// <summary>
            ///     Enum CA for value: CA
            /// </summary>
            [EnumMember(Value = "CA")] CA = 38,

            /// <summary>
            ///     Enum CV for value: CV
            /// </summary>
            [EnumMember(Value = "CV")] CV = 39,

            /// <summary>
            ///     Enum KY for value: KY
            /// </summary>
            [EnumMember(Value = "KY")] KY = 40,

            /// <summary>
            ///     Enum CF for value: CF
            /// </summary>
            [EnumMember(Value = "CF")] CF = 41,

            /// <summary>
            ///     Enum LK for value: LK
            /// </summary>
            [EnumMember(Value = "LK")] LK = 42,

            /// <summary>
            ///     Enum TD for value: TD
            /// </summary>
            [EnumMember(Value = "TD")] TD = 43,

            /// <summary>
            ///     Enum CL for value: CL
            /// </summary>
            [EnumMember(Value = "CL")] CL = 44,

            /// <summary>
            ///     Enum CN for value: CN
            /// </summary>
            [EnumMember(Value = "CN")] CN = 45,

            /// <summary>
            ///     Enum TW for value: TW
            /// </summary>
            [EnumMember(Value = "TW")] TW = 46,

            /// <summary>
            ///     Enum CX for value: CX
            /// </summary>
            [EnumMember(Value = "CX")] CX = 47,

            /// <summary>
            ///     Enum CC for value: CC
            /// </summary>
            [EnumMember(Value = "CC")] CC = 48,

            /// <summary>
            ///     Enum CO for value: CO
            /// </summary>
            [EnumMember(Value = "CO")] CO = 49,

            /// <summary>
            ///     Enum KM for value: KM
            /// </summary>
            [EnumMember(Value = "KM")] KM = 50,

            /// <summary>
            ///     Enum YT for value: YT
            /// </summary>
            [EnumMember(Value = "YT")] YT = 51,

            /// <summary>
            ///     Enum CG for value: CG
            /// </summary>
            [EnumMember(Value = "CG")] CG = 52,

            /// <summary>
            ///     Enum CD for value: CD
            /// </summary>
            [EnumMember(Value = "CD")] CD = 53,

            /// <summary>
            ///     Enum CK for value: CK
            /// </summary>
            [EnumMember(Value = "CK")] CK = 54,

            /// <summary>
            ///     Enum CR for value: CR
            /// </summary>
            [EnumMember(Value = "CR")] CR = 55,

            /// <summary>
            ///     Enum HR for value: HR
            /// </summary>
            [EnumMember(Value = "HR")] HR = 56,

            /// <summary>
            ///     Enum CU for value: CU
            /// </summary>
            [EnumMember(Value = "CU")] CU = 57,

            /// <summary>
            ///     Enum CY for value: CY
            /// </summary>
            [EnumMember(Value = "CY")] CY = 58,

            /// <summary>
            ///     Enum CZ for value: CZ
            /// </summary>
            [EnumMember(Value = "CZ")] CZ = 59,

            /// <summary>
            ///     Enum BJ for value: BJ
            /// </summary>
            [EnumMember(Value = "BJ")] BJ = 60,

            /// <summary>
            ///     Enum DK for value: DK
            /// </summary>
            [EnumMember(Value = "DK")] DK = 61,

            /// <summary>
            ///     Enum DM for value: DM
            /// </summary>
            [EnumMember(Value = "DM")] DM = 62,

            /// <summary>
            ///     Enum DO for value: DO
            /// </summary>
            [EnumMember(Value = "DO")] DO = 63,

            /// <summary>
            ///     Enum EC for value: EC
            /// </summary>
            [EnumMember(Value = "EC")] EC = 64,

            /// <summary>
            ///     Enum SV for value: SV
            /// </summary>
            [EnumMember(Value = "SV")] SV = 65,

            /// <summary>
            ///     Enum GQ for value: GQ
            /// </summary>
            [EnumMember(Value = "GQ")] GQ = 66,

            /// <summary>
            ///     Enum ET for value: ET
            /// </summary>
            [EnumMember(Value = "ET")] ET = 67,

            /// <summary>
            ///     Enum ER for value: ER
            /// </summary>
            [EnumMember(Value = "ER")] ER = 68,

            /// <summary>
            ///     Enum EE for value: EE
            /// </summary>
            [EnumMember(Value = "EE")] EE = 69,

            /// <summary>
            ///     Enum FO for value: FO
            /// </summary>
            [EnumMember(Value = "FO")] FO = 70,

            /// <summary>
            ///     Enum FK for value: FK
            /// </summary>
            [EnumMember(Value = "FK")] FK = 71,

            /// <summary>
            ///     Enum GS for value: GS
            /// </summary>
            [EnumMember(Value = "GS")] GS = 72,

            /// <summary>
            ///     Enum FJ for value: FJ
            /// </summary>
            [EnumMember(Value = "FJ")] FJ = 73,

            /// <summary>
            ///     Enum FI for value: FI
            /// </summary>
            [EnumMember(Value = "FI")] FI = 74,

            /// <summary>
            ///     Enum AX for value: AX
            /// </summary>
            [EnumMember(Value = "AX")] AX = 75,

            /// <summary>
            ///     Enum FR for value: FR
            /// </summary>
            [EnumMember(Value = "FR")] FR = 76,

            /// <summary>
            ///     Enum GF for value: GF
            /// </summary>
            [EnumMember(Value = "GF")] GF = 77,

            /// <summary>
            ///     Enum PF for value: PF
            /// </summary>
            [EnumMember(Value = "PF")] PF = 78,

            /// <summary>
            ///     Enum TF for value: TF
            /// </summary>
            [EnumMember(Value = "TF")] TF = 79,

            /// <summary>
            ///     Enum DJ for value: DJ
            /// </summary>
            [EnumMember(Value = "DJ")] DJ = 80,

            /// <summary>
            ///     Enum GA for value: GA
            /// </summary>
            [EnumMember(Value = "GA")] GA = 81,

            /// <summary>
            ///     Enum GE for value: GE
            /// </summary>
            [EnumMember(Value = "GE")] GE = 82,

            /// <summary>
            ///     Enum GM for value: GM
            /// </summary>
            [EnumMember(Value = "GM")] GM = 83,

            /// <summary>
            ///     Enum PS for value: PS
            /// </summary>
            [EnumMember(Value = "PS")] PS = 84,

            /// <summary>
            ///     Enum DE for value: DE
            /// </summary>
            [EnumMember(Value = "DE")] DE = 85,

            /// <summary>
            ///     Enum GH for value: GH
            /// </summary>
            [EnumMember(Value = "GH")] GH = 86,

            /// <summary>
            ///     Enum GI for value: GI
            /// </summary>
            [EnumMember(Value = "GI")] GI = 87,

            /// <summary>
            ///     Enum KI for value: KI
            /// </summary>
            [EnumMember(Value = "KI")] KI = 88,

            /// <summary>
            ///     Enum GR for value: GR
            /// </summary>
            [EnumMember(Value = "GR")] GR = 89,

            /// <summary>
            ///     Enum GL for value: GL
            /// </summary>
            [EnumMember(Value = "GL")] GL = 90,

            /// <summary>
            ///     Enum GD for value: GD
            /// </summary>
            [EnumMember(Value = "GD")] GD = 91,

            /// <summary>
            ///     Enum GP for value: GP
            /// </summary>
            [EnumMember(Value = "GP")] GP = 92,

            /// <summary>
            ///     Enum GU for value: GU
            /// </summary>
            [EnumMember(Value = "GU")] GU = 93,

            /// <summary>
            ///     Enum GT for value: GT
            /// </summary>
            [EnumMember(Value = "GT")] GT = 94,

            /// <summary>
            ///     Enum GN for value: GN
            /// </summary>
            [EnumMember(Value = "GN")] GN = 95,

            /// <summary>
            ///     Enum GY for value: GY
            /// </summary>
            [EnumMember(Value = "GY")] GY = 96,

            /// <summary>
            ///     Enum HT for value: HT
            /// </summary>
            [EnumMember(Value = "HT")] HT = 97,

            /// <summary>
            ///     Enum HM for value: HM
            /// </summary>
            [EnumMember(Value = "HM")] HM = 98,

            /// <summary>
            ///     Enum VA for value: VA
            /// </summary>
            [EnumMember(Value = "VA")] VA = 99,

            /// <summary>
            ///     Enum HN for value: HN
            /// </summary>
            [EnumMember(Value = "HN")] HN = 100,

            /// <summary>
            ///     Enum HK for value: HK
            /// </summary>
            [EnumMember(Value = "HK")] HK = 101,

            /// <summary>
            ///     Enum HU for value: HU
            /// </summary>
            [EnumMember(Value = "HU")] HU = 102,

            /// <summary>
            ///     Enum IS for value: IS
            /// </summary>
            [EnumMember(Value = "IS")] IS = 103,

            /// <summary>
            ///     Enum IN for value: IN
            /// </summary>
            [EnumMember(Value = "IN")] IN = 104,

            /// <summary>
            ///     Enum ID for value: ID
            /// </summary>
            [EnumMember(Value = "ID")] ID = 105,

            /// <summary>
            ///     Enum IR for value: IR
            /// </summary>
            [EnumMember(Value = "IR")] IR = 106,

            /// <summary>
            ///     Enum IQ for value: IQ
            /// </summary>
            [EnumMember(Value = "IQ")] IQ = 107,

            /// <summary>
            ///     Enum IE for value: IE
            /// </summary>
            [EnumMember(Value = "IE")] IE = 108,

            /// <summary>
            ///     Enum IL for value: IL
            /// </summary>
            [EnumMember(Value = "IL")] IL = 109,

            /// <summary>
            ///     Enum IT for value: IT
            /// </summary>
            [EnumMember(Value = "IT")] IT = 110,

            /// <summary>
            ///     Enum CI for value: CI
            /// </summary>
            [EnumMember(Value = "CI")] CI = 111,

            /// <summary>
            ///     Enum JM for value: JM
            /// </summary>
            [EnumMember(Value = "JM")] JM = 112,

            /// <summary>
            ///     Enum JP for value: JP
            /// </summary>
            [EnumMember(Value = "JP")] JP = 113,

            /// <summary>
            ///     Enum KZ for value: KZ
            /// </summary>
            [EnumMember(Value = "KZ")] KZ = 114,

            /// <summary>
            ///     Enum JO for value: JO
            /// </summary>
            [EnumMember(Value = "JO")] JO = 115,

            /// <summary>
            ///     Enum KE for value: KE
            /// </summary>
            [EnumMember(Value = "KE")] KE = 116,

            /// <summary>
            ///     Enum KP for value: KP
            /// </summary>
            [EnumMember(Value = "KP")] KP = 117,

            /// <summary>
            ///     Enum KR for value: KR
            /// </summary>
            [EnumMember(Value = "KR")] KR = 118,

            /// <summary>
            ///     Enum KW for value: KW
            /// </summary>
            [EnumMember(Value = "KW")] KW = 119,

            /// <summary>
            ///     Enum KG for value: KG
            /// </summary>
            [EnumMember(Value = "KG")] KG = 120,

            /// <summary>
            ///     Enum LA for value: LA
            /// </summary>
            [EnumMember(Value = "LA")] LA = 121,

            /// <summary>
            ///     Enum LB for value: LB
            /// </summary>
            [EnumMember(Value = "LB")] LB = 122,

            /// <summary>
            ///     Enum LS for value: LS
            /// </summary>
            [EnumMember(Value = "LS")] LS = 123,

            /// <summary>
            ///     Enum LV for value: LV
            /// </summary>
            [EnumMember(Value = "LV")] LV = 124,

            /// <summary>
            ///     Enum LR for value: LR
            /// </summary>
            [EnumMember(Value = "LR")] LR = 125,

            /// <summary>
            ///     Enum LY for value: LY
            /// </summary>
            [EnumMember(Value = "LY")] LY = 126,

            /// <summary>
            ///     Enum LI for value: LI
            /// </summary>
            [EnumMember(Value = "LI")] LI = 127,

            /// <summary>
            ///     Enum LT for value: LT
            /// </summary>
            [EnumMember(Value = "LT")] LT = 128,

            /// <summary>
            ///     Enum LU for value: LU
            /// </summary>
            [EnumMember(Value = "LU")] LU = 129,

            /// <summary>
            ///     Enum MO for value: MO
            /// </summary>
            [EnumMember(Value = "MO")] MO = 130,

            /// <summary>
            ///     Enum MG for value: MG
            /// </summary>
            [EnumMember(Value = "MG")] MG = 131,

            /// <summary>
            ///     Enum MW for value: MW
            /// </summary>
            [EnumMember(Value = "MW")] MW = 132,

            /// <summary>
            ///     Enum MY for value: MY
            /// </summary>
            [EnumMember(Value = "MY")] MY = 133,

            /// <summary>
            ///     Enum MV for value: MV
            /// </summary>
            [EnumMember(Value = "MV")] MV = 134,

            /// <summary>
            ///     Enum ML for value: ML
            /// </summary>
            [EnumMember(Value = "ML")] ML = 135,

            /// <summary>
            ///     Enum MT for value: MT
            /// </summary>
            [EnumMember(Value = "MT")] MT = 136,

            /// <summary>
            ///     Enum MQ for value: MQ
            /// </summary>
            [EnumMember(Value = "MQ")] MQ = 137,

            /// <summary>
            ///     Enum MR for value: MR
            /// </summary>
            [EnumMember(Value = "MR")] MR = 138,

            /// <summary>
            ///     Enum MU for value: MU
            /// </summary>
            [EnumMember(Value = "MU")] MU = 139,

            /// <summary>
            ///     Enum MX for value: MX
            /// </summary>
            [EnumMember(Value = "MX")] MX = 140,

            /// <summary>
            ///     Enum MC for value: MC
            /// </summary>
            [EnumMember(Value = "MC")] MC = 141,

            /// <summary>
            ///     Enum MN for value: MN
            /// </summary>
            [EnumMember(Value = "MN")] MN = 142,

            /// <summary>
            ///     Enum MD for value: MD
            /// </summary>
            [EnumMember(Value = "MD")] MD = 143,

            /// <summary>
            ///     Enum ME for value: ME
            /// </summary>
            [EnumMember(Value = "ME")] ME = 144,

            /// <summary>
            ///     Enum MS for value: MS
            /// </summary>
            [EnumMember(Value = "MS")] MS = 145,

            /// <summary>
            ///     Enum MA for value: MA
            /// </summary>
            [EnumMember(Value = "MA")] MA = 146,

            /// <summary>
            ///     Enum MZ for value: MZ
            /// </summary>
            [EnumMember(Value = "MZ")] MZ = 147,

            /// <summary>
            ///     Enum OM for value: OM
            /// </summary>
            [EnumMember(Value = "OM")] OM = 148,

            /// <summary>
            ///     Enum OS for value: OS
            /// </summary>
            [EnumMember(Value = "OS")] OS = 149,

            /// <summary>
            ///     Enum NA for value: NA
            /// </summary>
            [EnumMember(Value = "NA")] NA = 150,

            /// <summary>
            ///     Enum NR for value: NR
            /// </summary>
            [EnumMember(Value = "NR")] NR = 151,

            /// <summary>
            ///     Enum NP for value: NP
            /// </summary>
            [EnumMember(Value = "NP")] NP = 152,

            /// <summary>
            ///     Enum NL for value: NL
            /// </summary>
            [EnumMember(Value = "NL")] NL = 153,

            /// <summary>
            ///     Enum CW for value: CW
            /// </summary>
            [EnumMember(Value = "CW")] CW = 154,

            /// <summary>
            ///     Enum AW for value: AW
            /// </summary>
            [EnumMember(Value = "AW")] AW = 155,

            /// <summary>
            ///     Enum SX for value: SX
            /// </summary>
            [EnumMember(Value = "SX")] SX = 156,

            /// <summary>
            ///     Enum BQ for value: BQ
            /// </summary>
            [EnumMember(Value = "BQ")] BQ = 157,

            /// <summary>
            ///     Enum NC for value: NC
            /// </summary>
            [EnumMember(Value = "NC")] NC = 158,

            /// <summary>
            ///     Enum VU for value: VU
            /// </summary>
            [EnumMember(Value = "VU")] VU = 159,

            /// <summary>
            ///     Enum NZ for value: NZ
            /// </summary>
            [EnumMember(Value = "NZ")] NZ = 160,

            /// <summary>
            ///     Enum NI for value: NI
            /// </summary>
            [EnumMember(Value = "NI")] NI = 161,

            /// <summary>
            ///     Enum NE for value: NE
            /// </summary>
            [EnumMember(Value = "NE")] NE = 162,

            /// <summary>
            ///     Enum NG for value: NG
            /// </summary>
            [EnumMember(Value = "NG")] NG = 163,

            /// <summary>
            ///     Enum NU for value: NU
            /// </summary>
            [EnumMember(Value = "NU")] NU = 164,

            /// <summary>
            ///     Enum NF for value: NF
            /// </summary>
            [EnumMember(Value = "NF")] NF = 165,

            /// <summary>
            ///     Enum NO for value: NO
            /// </summary>
            [EnumMember(Value = "NO")] NO = 166,

            /// <summary>
            ///     Enum MP for value: MP
            /// </summary>
            [EnumMember(Value = "MP")] MP = 167,

            /// <summary>
            ///     Enum UM for value: UM
            /// </summary>
            [EnumMember(Value = "UM")] UM = 168,

            /// <summary>
            ///     Enum FM for value: FM
            /// </summary>
            [EnumMember(Value = "FM")] FM = 169,

            /// <summary>
            ///     Enum MH for value: MH
            /// </summary>
            [EnumMember(Value = "MH")] MH = 170,

            /// <summary>
            ///     Enum PW for value: PW
            /// </summary>
            [EnumMember(Value = "PW")] PW = 171,

            /// <summary>
            ///     Enum PK for value: PK
            /// </summary>
            [EnumMember(Value = "PK")] PK = 172,

            /// <summary>
            ///     Enum PA for value: PA
            /// </summary>
            [EnumMember(Value = "PA")] PA = 173,

            /// <summary>
            ///     Enum PG for value: PG
            /// </summary>
            [EnumMember(Value = "PG")] PG = 174,

            /// <summary>
            ///     Enum PY for value: PY
            /// </summary>
            [EnumMember(Value = "PY")] PY = 175,

            /// <summary>
            ///     Enum PE for value: PE
            /// </summary>
            [EnumMember(Value = "PE")] PE = 176,

            /// <summary>
            ///     Enum PH for value: PH
            /// </summary>
            [EnumMember(Value = "PH")] PH = 177,

            /// <summary>
            ///     Enum PN for value: PN
            /// </summary>
            [EnumMember(Value = "PN")] PN = 178,

            /// <summary>
            ///     Enum PL for value: PL
            /// </summary>
            [EnumMember(Value = "PL")] PL = 179,

            /// <summary>
            ///     Enum PT for value: PT
            /// </summary>
            [EnumMember(Value = "PT")] PT = 180,

            /// <summary>
            ///     Enum GW for value: GW
            /// </summary>
            [EnumMember(Value = "GW")] GW = 181,

            /// <summary>
            ///     Enum TL for value: TL
            /// </summary>
            [EnumMember(Value = "TL")] TL = 182,

            /// <summary>
            ///     Enum PR for value: PR
            /// </summary>
            [EnumMember(Value = "PR")] PR = 183,

            /// <summary>
            ///     Enum QA for value: QA
            /// </summary>
            [EnumMember(Value = "QA")] QA = 184,

            /// <summary>
            ///     Enum RE for value: RE
            /// </summary>
            [EnumMember(Value = "RE")] RE = 185,

            /// <summary>
            ///     Enum RO for value: RO
            /// </summary>
            [EnumMember(Value = "RO")] RO = 186,

            /// <summary>
            ///     Enum RU for value: RU
            /// </summary>
            [EnumMember(Value = "RU")] RU = 187,

            /// <summary>
            ///     Enum RW for value: RW
            /// </summary>
            [EnumMember(Value = "RW")] RW = 188,

            /// <summary>
            ///     Enum BL for value: BL
            /// </summary>
            [EnumMember(Value = "BL")] BL = 189,

            /// <summary>
            ///     Enum SH for value: SH
            /// </summary>
            [EnumMember(Value = "SH")] SH = 190,

            /// <summary>
            ///     Enum KN for value: KN
            /// </summary>
            [EnumMember(Value = "KN")] KN = 191,

            /// <summary>
            ///     Enum AI for value: AI
            /// </summary>
            [EnumMember(Value = "AI")] AI = 192,

            /// <summary>
            ///     Enum LC for value: LC
            /// </summary>
            [EnumMember(Value = "LC")] LC = 193,

            /// <summary>
            ///     Enum MF for value: MF
            /// </summary>
            [EnumMember(Value = "MF")] MF = 194,

            /// <summary>
            ///     Enum PM for value: PM
            /// </summary>
            [EnumMember(Value = "PM")] PM = 195,

            /// <summary>
            ///     Enum VC for value: VC
            /// </summary>
            [EnumMember(Value = "VC")] VC = 196,

            /// <summary>
            ///     Enum SM for value: SM
            /// </summary>
            [EnumMember(Value = "SM")] SM = 197,

            /// <summary>
            ///     Enum ST for value: ST
            /// </summary>
            [EnumMember(Value = "ST")] ST = 198,

            /// <summary>
            ///     Enum SA for value: SA
            /// </summary>
            [EnumMember(Value = "SA")] SA = 199,

            /// <summary>
            ///     Enum SN for value: SN
            /// </summary>
            [EnumMember(Value = "SN")] SN = 200,

            /// <summary>
            ///     Enum RS for value: RS
            /// </summary>
            [EnumMember(Value = "RS")] RS = 201,

            /// <summary>
            ///     Enum SC for value: SC
            /// </summary>
            [EnumMember(Value = "SC")] SC = 202,

            /// <summary>
            ///     Enum SL for value: SL
            /// </summary>
            [EnumMember(Value = "SL")] SL = 203,

            /// <summary>
            ///     Enum SG for value: SG
            /// </summary>
            [EnumMember(Value = "SG")] SG = 204,

            /// <summary>
            ///     Enum SK for value: SK
            /// </summary>
            [EnumMember(Value = "SK")] SK = 205,

            /// <summary>
            ///     Enum VN for value: VN
            /// </summary>
            [EnumMember(Value = "VN")] VN = 206,

            /// <summary>
            ///     Enum SI for value: SI
            /// </summary>
            [EnumMember(Value = "SI")] SI = 207,

            /// <summary>
            ///     Enum SO for value: SO
            /// </summary>
            [EnumMember(Value = "SO")] SO = 208,

            /// <summary>
            ///     Enum ZA for value: ZA
            /// </summary>
            [EnumMember(Value = "ZA")] ZA = 209,

            /// <summary>
            ///     Enum ZW for value: ZW
            /// </summary>
            [EnumMember(Value = "ZW")] ZW = 210,

            /// <summary>
            ///     Enum ES for value: ES
            /// </summary>
            [EnumMember(Value = "ES")] ES = 211,

            /// <summary>
            ///     Enum SS for value: SS
            /// </summary>
            [EnumMember(Value = "SS")] SS = 212,

            /// <summary>
            ///     Enum SD for value: SD
            /// </summary>
            [EnumMember(Value = "SD")] SD = 213,

            /// <summary>
            ///     Enum EH for value: EH
            /// </summary>
            [EnumMember(Value = "EH")] EH = 214,

            /// <summary>
            ///     Enum SR for value: SR
            /// </summary>
            [EnumMember(Value = "SR")] SR = 215,

            /// <summary>
            ///     Enum SJ for value: SJ
            /// </summary>
            [EnumMember(Value = "SJ")] SJ = 216,

            /// <summary>
            ///     Enum SZ for value: SZ
            /// </summary>
            [EnumMember(Value = "SZ")] SZ = 217,

            /// <summary>
            ///     Enum SE for value: SE
            /// </summary>
            [EnumMember(Value = "SE")] SE = 218,

            /// <summary>
            ///     Enum CH for value: CH
            /// </summary>
            [EnumMember(Value = "CH")] CH = 219,

            /// <summary>
            ///     Enum SY for value: SY
            /// </summary>
            [EnumMember(Value = "SY")] SY = 220,

            /// <summary>
            ///     Enum TJ for value: TJ
            /// </summary>
            [EnumMember(Value = "TJ")] TJ = 221,

            /// <summary>
            ///     Enum TH for value: TH
            /// </summary>
            [EnumMember(Value = "TH")] TH = 222,

            /// <summary>
            ///     Enum TG for value: TG
            /// </summary>
            [EnumMember(Value = "TG")] TG = 223,

            /// <summary>
            ///     Enum TK for value: TK
            /// </summary>
            [EnumMember(Value = "TK")] TK = 224,

            /// <summary>
            ///     Enum TO for value: TO
            /// </summary>
            [EnumMember(Value = "TO")] TO = 225,

            /// <summary>
            ///     Enum TT for value: TT
            /// </summary>
            [EnumMember(Value = "TT")] TT = 226,

            /// <summary>
            ///     Enum AE for value: AE
            /// </summary>
            [EnumMember(Value = "AE")] AE = 227,

            /// <summary>
            ///     Enum TN for value: TN
            /// </summary>
            [EnumMember(Value = "TN")] TN = 228,

            /// <summary>
            ///     Enum TR for value: TR
            /// </summary>
            [EnumMember(Value = "TR")] TR = 229,

            /// <summary>
            ///     Enum TM for value: TM
            /// </summary>
            [EnumMember(Value = "TM")] TM = 230,

            /// <summary>
            ///     Enum TC for value: TC
            /// </summary>
            [EnumMember(Value = "TC")] TC = 231,

            /// <summary>
            ///     Enum TV for value: TV
            /// </summary>
            [EnumMember(Value = "TV")] TV = 232,

            /// <summary>
            ///     Enum UG for value: UG
            /// </summary>
            [EnumMember(Value = "UG")] UG = 233,

            /// <summary>
            ///     Enum UA for value: UA
            /// </summary>
            [EnumMember(Value = "UA")] UA = 234,

            /// <summary>
            ///     Enum MK for value: MK
            /// </summary>
            [EnumMember(Value = "MK")] MK = 235,

            /// <summary>
            ///     Enum EG for value: EG
            /// </summary>
            [EnumMember(Value = "EG")] EG = 236,

            /// <summary>
            ///     Enum GB for value: GB
            /// </summary>
            [EnumMember(Value = "GB")] GB = 237,

            /// <summary>
            ///     Enum GG for value: GG
            /// </summary>
            [EnumMember(Value = "GG")] GG = 238,

            /// <summary>
            ///     Enum JE for value: JE
            /// </summary>
            [EnumMember(Value = "JE")] JE = 239,

            /// <summary>
            ///     Enum IM for value: IM
            /// </summary>
            [EnumMember(Value = "IM")] IM = 240,

            /// <summary>
            ///     Enum TZ for value: TZ
            /// </summary>
            [EnumMember(Value = "TZ")] TZ = 241,

            /// <summary>
            ///     Enum US for value: US
            /// </summary>
            [EnumMember(Value = "US")] US = 242,

            /// <summary>
            ///     Enum VI for value: VI
            /// </summary>
            [EnumMember(Value = "VI")] VI = 243,

            /// <summary>
            ///     Enum BF for value: BF
            /// </summary>
            [EnumMember(Value = "BF")] BF = 244,

            /// <summary>
            ///     Enum UY for value: UY
            /// </summary>
            [EnumMember(Value = "UY")] UY = 245,

            /// <summary>
            ///     Enum UZ for value: UZ
            /// </summary>
            [EnumMember(Value = "UZ")] UZ = 246,

            /// <summary>
            ///     Enum VE for value: VE
            /// </summary>
            [EnumMember(Value = "VE")] VE = 247,

            /// <summary>
            ///     Enum WF for value: WF
            /// </summary>
            [EnumMember(Value = "WF")] WF = 248,

            /// <summary>
            ///     Enum WS for value: WS
            /// </summary>
            [EnumMember(Value = "WS")] WS = 249,

            /// <summary>
            ///     Enum YE for value: YE
            /// </summary>
            [EnumMember(Value = "YE")] YE = 250,

            /// <summary>
            ///     Enum ZM for value: ZM
            /// </summary>
            [EnumMember(Value = "ZM")] ZM = 251
        }

        /// <summary>
        ///     Initializes a new instance of the <see cref="PersonAttributes" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected PersonAttributes()
        {
        }

        /// <summary>
        ///     Initializes a new instance of the <see cref="PersonAttributes" /> class.
        /// </summary>
        /// <param name="addresses">addresses (required).</param>
        /// <param name="citizenship">Гражданство (значение из двух букв по справочнику ISO) (required).</param>
        /// <param name="inn">ИНН.</param>
        /// <param name="snils">СНИЛС.</param>
        public PersonAttributes(List<GuaranteeAddress> addresses = default, CitizenshipEnum citizenship = default, string inn = default, string snils = default)
        {
            // to ensure "addresses" is required (not null)
            if (addresses == null) throw new ArgumentNullException("addresses is a required property for PersonAttributes and cannot be null");
            Addresses = addresses;
            Citizenship = citizenship;
            Inn = inn;
            Snils = snils;
        }


        /// <summary>
        ///     Гражданство (значение из двух букв по справочнику ISO)
        /// </summary>
        /// <value>Гражданство (значение из двух букв по справочнику ISO)</value>
        [DataMember(Name = "citizenship", IsRequired = true, EmitDefaultValue = true)]
        public CitizenshipEnum Citizenship { get; set; }

        /// <summary>
        ///     Gets or Sets Addresses
        /// </summary>
        [DataMember(Name = "addresses", IsRequired = true, EmitDefaultValue = true)]
        public List<GuaranteeAddress> Addresses { get; set; }

        /// <summary>
        ///     ИНН
        /// </summary>
        /// <value>ИНН</value>
        [DataMember(Name = "inn", EmitDefaultValue = false)]
        public string Inn { get; set; }

        /// <summary>
        ///     СНИЛС
        /// </summary>
        /// <value>СНИЛС</value>
        [DataMember(Name = "snils", EmitDefaultValue = false)]
        public string Snils { get; set; }

        /// <summary>
        ///     Returns true if PersonAttributes instances are equal
        /// </summary>
        /// <param name="input">Instance of PersonAttributes to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PersonAttributes input)
        {
            if (input == null) return false;
            return
                (
                    Addresses == input.Addresses ||
                    (Addresses != null &&
                     input.Addresses != null &&
                     Addresses.SequenceEqual(input.Addresses))
                ) &&
                (
                    Citizenship == input.Citizenship ||
                    Citizenship.Equals(input.Citizenship)
                ) &&
                (
                    Inn == input.Inn ||
                    (Inn != null &&
                     Inn.Equals(input.Inn))
                ) &&
                (
                    Snils == input.Snils ||
                    (Snils != null &&
                     Snils.Equals(input.Snils))
                );
        }

        /// <summary>
        ///     To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            // Inn (string) maxLength
            if (Inn != null && Inn.Length > 12) yield return new ValidationResult("Invalid value for Inn, length must be less than 12.", new[] { "Inn" });

            // Inn (string) minLength
            if (Inn != null && Inn.Length < 10) yield return new ValidationResult("Invalid value for Inn, length must be greater than 10.", new[] { "Inn" });

            // Snils (string) maxLength
            if (Snils != null && Snils.Length > 50) yield return new ValidationResult("Invalid value for Snils, length must be less than 50.", new[] { "Snils" });

            // Snils (string) minLength
            if (Snils != null && Snils.Length < 1) yield return new ValidationResult("Invalid value for Snils, length must be greater than 1.", new[] { "Snils" });
        }

        /// <summary>
        ///     Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PersonAttributes {\n");
            sb.Append("  Addresses: ").Append(Addresses).Append("\n");
            sb.Append("  Citizenship: ").Append(Citizenship).Append("\n");
            sb.Append("  Inn: ").Append(Inn).Append("\n");
            sb.Append("  Snils: ").Append(Snils).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        ///     Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        ///     Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return Equals(input as PersonAttributes);
        }

        /// <summary>
        ///     Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                if (Addresses != null) hashCode = hashCode * 59 + Addresses.GetHashCode();
                hashCode = hashCode * 59 + Citizenship.GetHashCode();
                if (Inn != null) hashCode = hashCode * 59 + Inn.GetHashCode();
                if (Snils != null) hashCode = hashCode * 59 + Snils.GetHashCode();
                return hashCode;
            }
        }
    }
}